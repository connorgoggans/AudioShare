package senderClient;

import javax.sound.sampled.*;

public class sender {

	public static void main(String[] args) throws LineUnavailableException {
		/*
		Mixer.Info[] mixers = AudioSystem.getMixerInfo();


		for(Mixer.Info a : mixers){
			System.out.println(a);
		}


		Mixer output = AudioSystem.getMixer(mixers[2]);
		System.out.println(output.getMixerInfo());

		Line[] lines = output.getSourceLines();

		System.out.println(lines.length);
		for(Line a : lines){
			System.out.println(a.getLineInfo());
		}
		 */
		Mixer.Info[] mixerInfos = AudioSystem.getMixerInfo();
		int i = 1;
		for (Mixer.Info info: mixerInfos){
			System.out.println("Mixer: " + i);
			Mixer m = AudioSystem.getMixer(info);
			Line.Info[] lineInfos = m.getSourceLineInfo();
			int a = 1;
			for (Line.Info lineInfo:lineInfos){
				System.out.println("Source Line: " + a);
				System.out.println (info.getName()+"---"+lineInfo);
				Line line = m.getLine(lineInfo);
				System.out.println("\t-----"+line);
				a++;
			}
			lineInfos = m.getTargetLineInfo();
			int b = 1;
			for (Line.Info lineInfo:lineInfos){
				System.out.println("Target Line: " + b);
				System.out.println (m+"---"+lineInfo);
				Line line = m.getLine(lineInfo);
				System.out.println("\t-----"+line);
				b++;
			}
			i++;
			System.out.println();

		}

		/*
		float sampleRate = 16000;
        int sampleSizeInBits = 8;
        int channels = 2;
        boolean signed = true;
        boolean bigEndian = true;
        AudioFormat format = new AudioFormat(sampleRate, sampleSizeInBits,
                                             channels, signed, bigEndian);

		TargetDataLine line;
		DataLine.Info info = new DataLine.Info(TargetDataLine.class, 
		    format); // format is an AudioFormat object
		if (!AudioSystem.isLineSupported(info)) {
		    // Handle the error.
		    }
		    // Obtain and open the line.
		try {
		    line = (TargetDataLine) AudioSystem.getLine(info);
		    line.open(format);
		} catch (LineUnavailableException ex) {
		        // Handle the error.
		    //... 
		}
		 */

	}

}
